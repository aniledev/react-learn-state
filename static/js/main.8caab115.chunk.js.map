{"version":3,"sources":["TheDate.js","Counter.js","App.js","index.js"],"names":["TheDate","props","state","datetime","Date","console","log","this","interval","setInterval","setState","clearInterval","toLocaleString","React","Component","Counter","handleButtonClick","newCount","count","step","onClick","defaultProps","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAsCeA,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,IAAIC,MAEhBC,QAAQC,IAAI,eANK,E,gEASE,IAAD,OAClBD,QAAQC,IAAI,qBACZC,KAAKC,SAAWC,aAAY,WAC1BJ,QAAQC,IAAI,eACZ,EAAKI,SAAS,CACZP,SAAU,IAAIC,SAEf,O,6CAIHO,cAAcJ,KAAKC,Y,+BAKnB,OAFAH,QAAQC,IAAI,UAGV,gCACE,8DACCC,KAAKL,MAAMC,SAASS,wB,GA7BPC,IAAMC,WCDtBC,E,kDACJ,WAAYd,GAAQ,IAAD,8BAEjB,cAAMA,IAWRe,kBAAoB,WAGlB,IAAMC,EAAW,EAAKf,MAAMgB,MAAQ,EAAKhB,MAAMiB,KAC/C,EAAKT,SAAS,CACZQ,MAAOD,KAfT,EAAKf,MAAQ,CACXgB,MAAO,EACPC,KAAM,EAAKlB,MAAMkB,MALF,E,qDAuBjB,OACE,gCACE,4DACA,oDAAuBZ,KAAKL,MAAMgB,SAClC,yBAAQE,QAASb,KAAKS,kBAAtB,iBAA8CT,KAAKL,MAAMiB,e,GA5B3CN,IAAMC,WAAtBC,EAUGM,aAAe,CACpBF,KAAM,GAuBKJ,QCrBAO,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,sEACA,cAAC,EAAD,IAEA,cAAC,EAAD,CAASJ,KAAM,QCLrBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8caab115.chunk.js","sourcesContent":["import React from \"react\";\n\n// think of classes like a blueprint\nclass TheDate extends React.Component {\n  constructor(props) {\n    super(props);\n    // initial state is usually set as an object; think of state as the STORE data in earlier projects\n    this.state = {\n      datetime: new Date(),\n    };\n    console.log(\"constructor\");\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.interval = setInterval(() => {\n      console.log(\"setInterval\");\n      this.setState({\n        datetime: new Date(),\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    console.log(\"render\");\n    // toLocaleString() displays the date in a human-readable format\n    return (\n      <div>\n        <h4>Display the Date Using State</h4>\n        {this.state.datetime.toLocaleString()}\n      </div>\n    );\n  }\n}\n\nexport default TheDate;\n","import React from \"react\";\n\nclass Counter extends React.Component {\n  constructor(props) {\n    // console.log(\"props in constructor\", props);\n    super(props);\n    this.state = {\n      count: 0,\n      step: this.props.step,\n    };\n  }\n\n  static defaultProps = {\n    step: 1,\n  };\n  // When adding an event listener function to a React class, use an arrow function to make sure that this is referring to the class instance.\n  handleButtonClick = () => {\n    // console.log(\"props in handlebutton\", this.props);\n    // console.log(\"state in handleclick\", this.state);\n    const newCount = this.state.count + this.state.step;\n    this.setState({\n      count: newCount,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Tally Counter: Using State</h4>\n        <p>The current count: {this.state.count}</p>\n        <button onClick={this.handleButtonClick}>Add {this.state.step}</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n\n// Make a number prop called step.\n// The step prop can control how much we add to the count each time the button is clicked.\n//  Don't forget to setup a default (static defaultProps) for the step prop with the number 1.\n","import \"./App.css\";\nimport TheDate from \"./TheDate\";\nimport Counter from \"./Counter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Setting, Reading, and Updating State</h1>\n      <TheDate />\n      {/* This is just to show that props and state can coexist */}\n      <Counter step={3} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}